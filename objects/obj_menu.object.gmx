<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale = 0.25
d_scale = 0.20
height = 100
height_previous = height

if !audio_is_playing(mus_menu) {
    audio_stop_all()
    audio_play_sound(mus_menu,1,1)
    audio_sound_gain(mus_menu,1,0)
}

ritmo = 0
alarm[0] = global.bobs

global.bobs = 38

baixo = false
Estado = "premenu"
trans = 0

indi = 0


t = 0

dif = 0

c_scale = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ritmo++

alarm[0] = 32
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = keyboard_check_pressed(ord('W')) or keyboard_check_pressed(vk_up)
down = keyboard_check_pressed(ord('S')) or keyboard_check_pressed(vk_down)
left = keyboard_check_pressed(ord('A')) or keyboard_check_pressed(vk_left)
right = keyboard_check_pressed(ord('D')) or keyboard_check_pressed(vk_right)
enter = keyboard_check_pressed(vk_enter) or keyboard_check_pressed(vk_space)

if keyboard_check_pressed(vk_escape) {
    game_end()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ritmo == 4 {
    Estado = "menu"
}

draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_color(c_white)
draw_set_font(font0)
    if ritmo &gt;= 1
        draw_text(room_width/2 + trans,room_height/2, "BOXMANCER")
draw_set_font(font1)
    if ritmo &gt;= 2
        draw_text_transformed(room_width/2 + trans ,room_height/2 + 100,"Play",scale,scale,0)
    if ritmo &gt;= 3
        draw_text_transformed(room_width/2 + trans,room_height/2 + 150,"Tutorial",scale,scale,0)
    draw_text_transformed(room_width/2 + room_width + trans ,room_height/2 - 140,"Choose your difficulty:",scale,scale,0)
    draw_text_transformed(room_width/2 + room_width + trans,room_height/2 - 70,"Babby's first square #(300 digicoins)",d_scale,d_scale,0)
    draw_text_transformed(room_width/2 + room_width + trans ,room_height/2 ,"Experienced Cartesianist #(100 digicoins)",d_scale,d_scale,0)
    draw_text_transformed(room_width/2 + room_width + trans,room_height/2 + 70,"Non-euclidean Lunatic #(No digicoins)",d_scale,d_scale,0)
if Estado = "menu" {    
    draw_sprite_ext(spr_cursor,0,room_width/2 - 150 + trans,room_height/2 + height,c_scale,c_scale,0,c_white,1)
}
else {
    if ritmo &gt;= 4
    draw_sprite_ext(spr_cursor,0,room_width/2 - 150 + trans,room_height/2 + 100 + 50*baixo,c_scale,c_scale,0,c_white,1)
}
if Estado = "dificuldades"
    draw_sprite_ext(spr_cursor,0,room_width/2 + room_width - 270 + trans,room_height/2 + height - 10,c_scale,c_scale,0,c_white,1)
else
    draw_sprite_ext(spr_cursor,0,room_width/2 + room_width - 270 + trans,room_height/2 + indi*70 - 70 - 10,c_scale,c_scale,0,c_white,1)

switch Estado {
    
    case "menu":
        if trans &lt; 0 {
            trans = scr_cubic(0,room_width,100)
        }
        
        if down {
            baixo = true
        }
        if up {
            baixo = false
        }
        
        if height &lt; 150 and baixo {
            height += 5
        }

        if height &gt; 100 and !baixo {
            height -= 5
        }
        
        if enter or right {
            if !baixo {
                t = 0
                height = indi*70 - 70
                Estado = "dificuldades"
            }
            else {
                t = 0
                global.grana = 0
                Estado = "saindo"
            }
        }
    break;
    
    case "dificuldades":
        if trans &gt; -room_width {
            trans = scr_cubic(-room_width,-room_width,100)
        }
        
        if down {
            indi++
        }
        if up {
            indi--
        }
        indi = clamp(indi,0,2)
        
        if height &lt; indi*70 - 70 {
            height += 5
        }

        if height &gt; indi*70 - 70 {
            height -= 5
        }
        
        if left {
            t = 0
            height = 100
            Estado = "menu"
        }
        
        if enter or right {
            global.grana = 300 - indi*200
            global.grana = clamp(global.grana,0,300)
            t = 0
            Estado = "saindo"
        }  
    break;
    
    case "saindo":
        audio_sound_gain(mus_menu,0,500)
        if !baixo {
            if trans &gt; -(room_width*2) {
                trans = scr_cubic(-(room_width*2),-(room_width),100)
            }
            else {
                audio_stop_all()
                room_goto(rm_teste)
            }
        }
        else {
            if trans &lt; room_width {
                trans = scr_cubic(room_width,room_width,100)
            }
            else {
                audio_stop_all()
                room_goto(rm_teste2)
            }
        }
    break;

}


if !(height_previous == height) {
    if c_scale &gt; 0.5 {
        c_scale -= 0.1
    }
}
else {
    if c_scale &lt; 1 {
        c_scale += 0.1
    }
}

height_previous = height

    
    
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
