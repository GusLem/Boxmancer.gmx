<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mira</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>core_play</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Estado = "posativado"
sp = 0

direc = 0

image_alpha = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch Estado {

    case "posativado":
        if !global.freeze {
            x = mouse_x
            y = mouse_y
            
            if mouse_check_button_pressed(mb_left) {     
                instance_create(x,y,obj_flash) 
            }
        }
    break;
    
    case "ativado":
        if !global.freeze {
            if point_distance(x,y,mouse_x,mouse_y) &gt; 10 {
                sp = 15
                var point = point_direction(x,y,mouse_x,mouse_y);
                var distan = point_distance(x,y,mouse_x,mouse_y);
                x += lengthdir_x(sp,point)
                y += lengthdir_y(sp,point)
            }
            else {
                Estado = "posativado"
                sp = 0
            }
        }
    break;
    
    case "desativado":
        if !global.freeze {
            if point_distance(x,y,obj_core.x,obj_core.y) &gt; 10 {
                sp = 15
                x += lengthdir_x(sp,point_direction(x,y,obj_core.x,obj_core.y))
                y += lengthdir_y(sp,point_direction(x,y,obj_core.x,obj_core.y))
            }
            else {
                x = obj_core.x
                y = obj_core.y
                speed = 0
                sp = 0
            }
        }
    break;

}




 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_alpha &lt; 1 {
    image_alpha += 0.02
}
else {
    image_alpha = 1
}

draw_self()


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
