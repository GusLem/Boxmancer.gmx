<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,obj_core)
instance_create(room_width/2,room_height/2,obj_mira)
instance_create(0,0,obj_player)
instance_create(view_xview + 50,view_yview + 50,obj_money)
instance_create(0,0,obj_pausa)

tranca = false

accel = 0

view_xview = obj_player.x - view_wview/2
view_yview = obj_player.y - view_hview/2 

trans = 0
t= 0

global.start = false
global.freeze = false
global.pontos = 0

end_rec = false

global.pos = 1

alp = 0

vx = 0
vy = 0
vol = 15

global.dano = false

unzoom_x = view_wview
unzoom_y = view_hview

zoom_x = view_wview/2
zoom_y = view_hview/2

with core_play {
    Estado = "desativado"
}
instance_create(obj_core.x,obj_core.y,obj_joinorb)
Estado = "desativado"

shake = false

view_wview = zoom_x
view_hview = zoom_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.freeze = false
audio_play_sound(snd_out,1,0)
background_color = c_black
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shake = false
global.dano = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screenshake

if Estado = "desativado" or point_distance(obj_core.x,obj_core.y,obj_player.x,obj_player.y) &gt; 10 and Estado != "morto" {
    view_xview = obj_player.x - view_wview/2 
    view_yview = obj_player.y - view_hview/2
    obj_camera.x = obj_core.x
    obj_camera.y = obj_core.y
}
else if Estado == "morto" {}
else {
    view_xview = obj_core.x - view_wview/2 
    view_yview = obj_core.y - view_hview/2
    obj_player.x = obj_core.x
    obj_player.y = obj_core.y
}

if shake {
    view_xview += random_range(-3,3)
    view_yview += random_range(-3,3)
}

if keyboard_check_pressed(vk_escape) {
    game_end()
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estados

switch Estado {

    case "ativado":
        if view_wview &lt; unzoom_x {
            view_wview += zoom_x/40
            view_hview += zoom_y/40
        }
        if view_wview &gt; unzoom_x {
            view_wview -= zoom_x/40
            view_hview -= zoom_y/40
        }
        if mouse_wheel_down() {
            if unzoom_x &lt; 2500 {
                unzoom_x += zoom_x/10
                unzoom_y += zoom_y/10
            }
        }
        if mouse_wheel_up() {
            if unzoom_x &gt; 1440 {
                unzoom_x -= zoom_x/10
                unzoom_y -= zoom_y/10
            }
        }
        if keyboard_check(ord('S')){
            if unzoom_x &lt; 2500 {
                unzoom_x += zoom_x/40
                unzoom_y += zoom_y/40
            }
        }
        if keyboard_check(ord('W')){
            if unzoom_x &gt; 1440 {            
                unzoom_x -= zoom_x/40
                unzoom_y -= zoom_y/40
            }
        }
        if keyboard_check_pressed (vk_space) and !tranca {
            with core_play {
                Estado = "desativado"
            }
            instance_create(obj_core.x,obj_core.y,obj_joinorb)
            Estado = "desativado"
        }
    break;
    
    case "desativado":
        if view_wview &gt; zoom_x {
            view_wview -= zoom_x/40
            view_hview -= zoom_y/40
        }
    break;
    
    case "morto":
        var core_ang = point_direction(obj_player.x,obj_player.y,obj_core.x,obj_core.y);
        var core_len = point_distance(view_xview + view_wview/2,view_yview + view_hview/2,obj_core.x,obj_core.y);   
        
        if core_len &gt; 20 {
            view_xview += lengthdir_x(accel,core_ang)
            view_yview += lengthdir_y(accel,core_ang)
        }
    
        accel += 0.5
    break;

}

if keyboard_check_pressed (ord('F')) and !global.freeze and obj_money.money &gt;= 50 {
            global.freeze = true
            background_color = c_white
            audio_play_sound(snd_in,1,0)
            alarm[2] = 1200
            alp = 1
            with obj_money {
                money -= max(50,money/2)
            }
}
if keyboard_check_pressed (ord('F')) and alarm[2] &lt; 1199 and global.freeze {
    alarm[2] = 0.6
}

if keyboard_check_pressed(ord('R')) or mouse_check_button_pressed(mb_right)  { 
    with obj_corpse {
        if !marcado {
            global.pontos += 7
            alarm[0] = global.pontos
            marcado = true
        }
    }
    with obj_corpse_tut {
        if !marcado {
            global.pontos += 7
            alarm[0] = global.pontos
            marcado = true
        }
    }
}

global.pontos = 0






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimentação

vaxis = 0;
haxis = 0;

if keyboard_check_direct(ord('W')){vaxis = -1}
if keyboard_check_direct(ord('S')){vaxis = 1}
if keyboard_check_direct(ord('A')){haxis = -1}
if keyboard_check_direct(ord('D')){haxis = 1}

if abs(vx) &lt; vol {
    vx += haxis
}
if abs(vy) &lt; vol {
    vy += vaxis
}

vx *= 0.9
vy *= 0.9


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alp &gt; 0 {
    alp -= 0.01
}

draw_set_color(c_white)
draw_set_alpha(alp)
draw_rectangle(view_xview,view_yview,view_xview + view_wview,view_yview + view_hview,false)

draw_set_alpha(0.5)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_font(font1)
if global.freeze 
draw_text(view_xview + view_wview/2,view_yview + view_hview - 100,alarm[2]/60)

draw_set_alpha(1)

if !collision_rectangle(view_xview,view_yview,view_xview + view_wview,view_yview + view_hview,obj_core,true,false) {
    angus = point_direction(obj_player.x,obj_player.y,obj_core.x,obj_core.y)
    draw_text_transformed(view_xview + view_wview/2 + lengthdir_x(100,angus), view_yview + view_hview/2 + lengthdir_y(100,angus), "&gt;",0.25,0.25,angus)
}

if trans &gt; -room_width {
    trans = scr_cubic(-view_wview,-view_wview,100)
}
else {
    end_rec = true
}
draw_set_color(c_black)
if !end_rec 
draw_rectangle(view_xview + trans,view_yview,view_xview + view_wview + trans,view_yview + view_hview,false)




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
