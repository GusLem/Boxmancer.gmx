<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale = 0.25
d_scale = 0.20
height = 100
height_previous = height

baixo = false
Estado = "menu"
trans = 0

indi = 0

to_black  = 0

alp = 0
alp_rec = 0


t = 0

dif = 0

c_scale = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = keyboard_check_pressed(ord('W')) or keyboard_check_pressed(vk_up)
down = keyboard_check_pressed(ord('S')) or keyboard_check_pressed(vk_down)
left = keyboard_check_pressed(ord('A')) or keyboard_check_pressed(vk_left)
right = keyboard_check_pressed(ord('D')) or keyboard_check_pressed(vk_right)
enter = keyboard_check_pressed(vk_enter) or keyboard_check_pressed(vk_space)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alp &lt; 1 {
    alp += 0.02
}

if to_black {
    if alp_rec &lt; 1 {
        alp_rec += 0.02
    }
    else {
        if !baixo {
            room_goto(rm_teste)
        }
        else {
            room_goto(rm_menu)
        }
    }
}

draw_set_color(c_black)
draw_set_alpha(alp_rec)
    draw_rectangle(0,0,room_width,room_height,false)
draw_set_alpha(alp)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_font(font0)
    draw_text(room_width/2 + trans,room_height/2 - 100, "GAME OVER")
    draw_text(room_width/2 + trans ,room_height/2,"score: " + string(score))
draw_set_font(font1)
    draw_text_transformed(room_width/2 + trans ,room_height/2 + 100,"Retry",scale,scale,0)
    draw_text_transformed(room_width/2 + trans,room_height/2 + 150,"Menu",scale,scale,0)
   
    draw_sprite_ext(spr_cursor,0,room_width/2 - 150 + trans,room_height/2 + height,c_scale,c_scale,0,c_black,alp)
draw_set_alpha(1)




switch Estado {
    
    case "menu":
        if trans &lt; 0 {
            trans = scr_cubic(0,room_width,100)
        }
        
        if down {
            baixo = true
        }
        if up {
            baixo = false
        }
        
        if height &lt; 150 and baixo {
            height += 5
        }

        if height &gt; 100 and !baixo {
            height -= 5
        }
        
        if enter or right {
            to_black = true
        }
    break;

}


if !(height_previous == height) {
    if c_scale &gt; 0.5 {
        c_scale -= 0.1
    }
}
else {
    if c_scale &lt; 1 {
        c_scale += 0.1
    }
}

height_previous = height

    
    
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
